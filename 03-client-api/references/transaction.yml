
title: "Transaction"
methods:
  - method:
    common: &method-type
      title: Check the transaction's type
      description: |
        Checks the transaction's type (READ or WRITE)
    java:
      <<: *method-type
      method: transaction.type();
      returns:
        - Transaction.Type
    javascript:
      <<: *method-type
      method: transaction.type;
      returns:
        - TransactionType
    python:
      <<: *method-type
      method: transaction.transaction_type()
      returns:
        - TransactionType

  - method:
    common: &method-isOpen
      title: Check if the transaction is open
      returns:
        - boolean
    java:
      <<: *method-isOpen
      method: transaction.isOpen();
    javascript:
      <<: *method-isOpen
      method: transaction.isOpen();
    python:
      <<: *method-isOpen
      method: transaction.is_open()

  - method:
    common: &method-concepts
      title: Access Concept API methods
      description: |
        Gets the [`ConceptManager`](../concept-api/concept#conceptmanager) for this Transaction, providing access to all Concept API methods.

    java:
      <<: *method-concepts
      method: transaction.concepts();
      returns:
        - "[`ConceptManager`](../concept-api/concept?tab=java#conceptmanager)"
    javascript:
      <<: *method-concepts
      method: transaction.concepts;
      returns:
        - "[`ConceptManager`](../concept-api/concept?tab=javascript#conceptmanager)"
    python:
      <<: *method-concepts
      method: transaction.concepts();
      returns:
        - "[`ConceptManager`](../concept-api/concept?tab=python#conceptmanager)"

  - method:
    common: &method-logic
      title: Access Concept API - Logic methods
      description: |
        Gets the [`LogicManager`](../concept-api/rule#logicmanager) for this Transaction, providing access to all Concept API - Logic methods.
    java:
      <<: *method-logic
      method: transaction.logic();
      returns:
        - "[`LogicManager`](../concept-api/rule?tab=java#logicmanager)"
    javascript:
      <<: *method-logic
      method: transaction.logic;
      returns:
        - "[`LogicManager`](../concept-api/rule?tab=javascript#logicmanager)"
    python:
      <<: *method-logic
      method: transaction.logic();
      returns:
        - "[`LogicManager`](../concept-api/rule?tab=python#logicmanager)"

  - method:
    common: &method-query
      title: Access Query API methods
      description: |
        Gets the [`QueryManager`](#querymanager) for this Transaction, from which any TypeQL query can be executed.
      returns:
        - "[`QueryManager`](#querymanager)"
    java:
      <<: *method-query
      method: transaction.query();
    javascript:
      <<: *method-query
      method: transaction.query;
    python:
      <<: *method-query
      method: transaction.query();

  - method:
    common: &method-commit
      title: Commit a write transaction
      description: |
        Commits the changes made via this transaction to the TypeDB database.
        **Whether or not the transaction is commited successfully, it gets closed after the commit call.**
    java:
      <<: *method-commit
      method: transaction.commit();
      returns:
        - void
    javascript:
      <<: *method-commit
      method: await transaction.commit();
      returns:
        - void
    python:
      <<: *method-commit
      method: transaction.commit()
      returns:
        - None

  - method:
    common: &method-rollback
      title: Rollback a write transaction
      description: |
        Rolls back the uncommitted changes made via this transaction.
    java:
      <<: *method-rollback
      method: transaction.rollback();
      returns:
        - void
    javascript:
      <<: *method-rollback
      method: await transaction.rollback();
      returns:
        - void
    python:
      <<: *method-rollback
      method: transaction.rollback()
      returns:
        - None

  - method:
    common: &method-close
      title: Close a read transaction
      description: Closes the transaction.
    java:
      <<: *method-close
      method: transaction.close();
      returns:
        - void
    javascript:
      <<: *method-close
      method: await transaction.close();
      returns:
        - void
    python:
      <<: *method-close
      method: transaction.close()
      returns:
        - None
