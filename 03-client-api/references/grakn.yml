methods:
  - method:
    common: &method-client-core
      title: Instantiating a TypeDB Core client
      description: |
        In order to communicate with TypeDB Core databases via sessions and transactions, we first need to instantiate a TypeDB Core client.
        The created object connects our application with the running TypeDB Server.
      accepts: &accepts-client-core
        param1: &accepts-client-core-uri
          name: address
          description: The address (host:port) on which the TypeDB Server is running
          type: String
          required: true
        param2: &accepts-client-core-parallelisation
          name: parallelisation
          description: The number of threads to use for server communication
          type: int
          required: false
          default: Scales based on host machine's number of available CPU cores
      returns:
        - "[Client](#client)"
    java:
      <<: *method-client-core
      method: TypeDB.coreClient(String address, int parallelisation);
    javascript:
      <<: *method-client-core
      method: TypeDB.coreClient(address);
      accepts:
        param1:
          <<: *accepts-client-core-uri
    python:
      <<: *method-client-core
      method: TypeDB.core_client(address, parallelisation)
      accepts:
        param1:
          <<: *accepts-client-core-uri
        param2:
          <<: *accepts-client-core-parallelisation
          default: 2
  - method:
    common: &method-client-cluster
      title: Instantiating a TypeDB Cluster client
      description: |
        In order to communicate with TypeDB Cluster databases via sessions and transactions, we first need to instantiate a TypeDB Cluster client.
        The created object connects our application with the running TypeDB Cluster.
      accepts: &accepts-client-cluster
        param1: &accepts-client-cluster-addresses
          name: addresses
          description: All addresses (host:port) on which TypeDB Cluster nodes are running
          type: Set<String>
          required: true
        param2: &accepts-client-cluster-parallelisation
          name: parallelisation
          description: The number of threads to use for server communication
          type: int
          required: false
          default: Scales based on host machine's number of available CPU cores
      returns:
        - "[Client](#client)"
    java:
      <<: *method-client-cluster
      method: TypeDB.clusterClient(Set<String> addresses, int parallelisation);
    javascript:
      <<: *method-client-cluster
      method: TypeDB.clusterClient(addresses);
      accepts:
        param1:
          <<: *accepts-client-cluster-addresses
          type: Array of String
    python:
      <<: *method-client-cluster
      method: TypeDB.cluster_client(addresses, parallelisation)
      accepts:
        param1:
          <<: *accepts-client-cluster-addresses
          type: list of String
        param2:
          <<: *accepts-client-cluster-parallelisation
          default: 2
