config:
  version-candidate: VERSION
  dependencies:
    dependencies: [build]
    common: [release]
    client-java: [release]
    client-python: [release]
    client-nodejs: [release]

build:
  quality:
    filter:
      owner: vaticle
      branch: master
    dependency-analysis:
      image: graknlabs-ubuntu-20.04-java11
      command: |
        bazel run @graknlabs_dependencies//grabl/analysis:dependency-analysis
  correctness:
    build:
      image: graknlabs-ubuntu-20.04
      type: foreground
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel build //...
        dependencies/maven/update.sh
        git diff --exit-code dependencies/maven/artifacts.snapshot
        bazel run @graknlabs_dependencies//tool/unuseddeps:unused-deps -- list
    test-query-graql-lang:
      image: graknlabs-ubuntu-20.04
      type: foreground
      command: |
        cat > grakn.service <<- EOM
        [Unit]
        Description=Grakn Core
        [Service]
        Type=simple
        ExecStart=/home/grabl/docs/dist/grakn-core-all-linux/grakn server
        EOM
        sudo mv grakn.service /etc/systemd/system/

        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel run //:grakn-extractor -- dist/grakn-core-all-linux
        sudo systemctl daemon-reload
        sudo systemctl start grakn
        time bazel run //test/query:graql-lang
    test-query-graql-java:
      image: graknlabs-ubuntu-20.04
      type: foreground
      command: |
        cat > grakn.service <<- EOM
        [Unit]
        Description=Grakn Core
        [Service]
        Type=simple
        ExecStart=/home/grabl/docs/dist/grakn-core-all-linux/grakn server
        EOM
        sudo mv grakn.service /etc/systemd/system/

        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel run //:grakn-extractor -- dist/grakn-core-all-linux
        sudo systemctl daemon-reload
        sudo systemctl start grakn
        bazel test //test/query:graql-java --test_output=errors
    test-example-java:
      image: graknlabs-ubuntu-20.04
      type: foreground
      command: |
        cat > grakn.service <<- EOM
        [Unit]
        Description=Grakn Core
        [Service]
        Type=simple
        ExecStart=/home/grabl/docs/dist/grakn-core-all-linux/grakn server
        EOM
        sudo mv grakn.service /etc/systemd/system/

        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel run //:grakn-extractor -- dist/grakn-core-all-linux
        sudo systemctl daemon-reload
        sudo systemctl start grakn
        bazel run //test/example/java:phone-calls
        bazel run //test/example/java:social-network
    test-example-nodejs:
      image: graknlabs-ubuntu-20.04
      type: foreground
      command: |
        cat > grakn.service <<- EOM
        [Unit]
        Description=Grakn Core
        [Service]
        Type=simple
        ExecStart=/home/grabl/docs/dist/grakn-core-all-linux/grakn server
        EOM
        sudo mv grakn.service /etc/systemd/system/

        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel run //:grakn-extractor -- dist/grakn-core-all-linux
        sudo systemctl daemon-reload
        sudo systemctl start grakn
        bazel test //test/example/nodejs:phone-calls --test_output=errors
        bazel test //test/example/nodejs:social-network --test_output=errors
    test-example-python:
      image: graknlabs-ubuntu-20.04
      type: foreground
      command: |
        cat > grakn.service <<- EOM
        [Unit]
        Description=Grakn Core
        [Service]
        Type=simple
        ExecStart=/home/grabl/docs/dist/grakn-core-all-linux/grakn server
        EOM
        sudo mv grakn.service /etc/systemd/system/

        pyenv global 3.6.10
        sudo unlink /usr/bin/python3
        sudo ln -s $(which python3) /usr/bin/python3
        sudo ln -s /usr/share/pyshared/lsb_release.py /opt/pyenv/versions/3.6.10/lib/python3.6/site-packages/lsb_release.py
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel run //:grakn-extractor -- dist/grakn-core-all-linux
        sudo systemctl daemon-reload
        sudo systemctl start grakn
        bazel run //test/example/python:phone-calls
        bazel run //test/example/python:social-network
    test-links:
      image: graknlabs-ubuntu-20.04
      type: foreground
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        bazel test //test/links:test --test_output=errors
    release-staging:
      filter:
        owner: vaticle
        branch: development
      image: graknlabs-ubuntu-20.04
      type: foreground
      # FIXME: even with tests broken, we still want to release to staging
      # dependencies: [build, test-query-graql-lang, test-query-graql-java, test-example-java, test-example-nodejs, test-example-python, test-links]
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        export RELEASE_DOCS_USERNAME=$REPO_GITHUB_USERNAME
        export RELEASE_DOCS_EMAIL=$REPO_GITHUB_EMAIL
        export RELEASE_DOCS_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @graknlabs_dependencies//tool/release:docs -- $GRABL_OWNER web-docs development $GRABL_REPO docs $GRABL_COMMIT
    release-production:
      filter:
        owner: vaticle
        branch: master
      image: graknlabs-ubuntu-20.04
      type: foreground
      # FIXME: even with tests broken, we still want to release to production
      # dependencies: [build, test-query-graql-lang, test-query-graql-java, test-example-java, test-example-nodejs, test-example-python, test-links]
      command: |
        export ARTIFACT_USERNAME=$REPO_VATICLE_USERNAME
        export ARTIFACT_PASSWORD=$REPO_VATICLE_PASSWORD
        bazel run @graknlabs_dependencies//distribution/artifact:create-netrc
        export RELEASE_DOCS_USERNAME=$REPO_GITHUB_USERNAME
        export RELEASE_DOCS_EMAIL=$REPO_GITHUB_EMAIL
        export RELEASE_DOCS_TOKEN=$REPO_GITHUB_TOKEN
        bazel run @graknlabs_dependencies//tool/release:docs -- $GRABL_OWNER web-docs master $GRABL_REPO docs $GRABL_COMMIT
  execution:
    - build
    - test-query-graql-lang
    - test-query-graql-java
    - test-example-java
    - test-example-nodejs
    - test-example-python
    - test-links
    - release-staging
    - release-production
