methods:
  - method:
    common: &method-getvalueType
      title: Retrieve valuetype (Local)
      description: Retrieves the valuetype of this AttributeType.
      returns:
        - AttributeType.ValueType (STRING &#124; DATETIME &#124; LONG &#124; DOUBLE &#124; BOOLEAN)
    java:
      <<: *method-getvalueType
      method: attributeType.getValueType();
    javascript:
      <<: *method-getvalueType
      method: attributeType.valueType;
    python:
      <<: *method-getvalueType
      method: attributeType.get_value_type()

  - method:
    common: &method-setsupertype
      title: Set supertype
      description: Sets the supplied AttributeType as the supertype of the current AttributeType
      accepts: &accepts-setsupertype
        param: &accepts-setsupertype-attributetype
          name: attributeType
          description: The AttributeType to set as the supertype of this AttributeType
          type: AttributeType
          required: true
          default: N/A
    java:
      <<: *method-setsupertype
      method: attributeType.asRemote(Transaction tx).setSupertype(AttributeType attributeType);
      returns:
        - void
    javascript:
      <<: *method-setsupertype
      method: attributeType.asRemote(tx).setSupertype(attributeType);
      returns:
        - void
    python:
      <<: *method-setsupertype
      method: attributeType.as_remote(tx).set_supertype(attribute_type)
      accepts:
        <<: *accepts-setsupertype
        param:
          <<: *accepts-setsupertype-attributetype
          name: attribute_type
      returns:
        - None

  - method:
    common: &method-getSubtypes
      title: Retrieve all subtypes
      description: Retrieves all direct and indirect subtypes of the AttributeType.
    java:
      <<: *method-getSubtypes
      method: attributeType.asRemote(Transaction tx).getSubtypes();
      returns:
        - Stream<[`AttributeType`](../concept-api/type?tab=java#attributetype-methods)>
    javascript:
      <<: *method-getSubtypes
      method: attributeType.asRemote(tx).getSubtypes()
      returns:
        - "[`Stream`](../client-api/nodejs#stream) of [`AttributeType`](../concept-api/type?tab=javascript#attributetype-methods)"
    python:
      <<: *method-getSubtypes
      method: attributeType.as_remote(tx).get_subtypes()
      returns:
        - Iterator of [`AttributeType`](../concept-api/type?tab=python#attributetype-methods)

  - method:
    common: &method-getInstances
      title: Retrieve all instances of this AttributeType
      description: Retrieves all direct and indirect Attributes that are instances of this Type.
    java:
      <<: *method-getInstances
      method: attributeType.asRemote(Transaction tx).getInstances();
      returns:
        - Stream<[`Attribute`](../concept-api/thing?tab=java#attribute-methods)>
    javascript:
      <<: *method-getInstances
      method: attributeType.asRemote(tx).getInstances()
      returns:
        - "[`Stream`](../client-api/nodejs#stream) of [`Attribute`](../concept-api/thing?tab=javascript#attribute-methods)"
    python:
      <<: *method-getInstances
      method: attributeType.as_remote(tx).get_instances()
      returns:
        - Iterator of [`Attribute`](../concept-api/thing?tab=python#attribute-methods)

  - method:
    common: &method-getOwners
      title: Retrieve direct and inherited owners of this Type of Attribute
      description: Retrieve all Things that own an attribute of this type. Optionally, only fetches Things that own an attribute of this type as a key.
      accepts:
        param:
          name: onlyKey
          description: If true, only retrieve things that have an attribute of this type as a key.
          type: boolean
          required: false
          default: false
    java:
      <<: *method-getOwners
      method: attributeType.asRemote(Transaction tx).getOwners(boolean onlyKey);
      returns:
        - Stream<[`Thing`](../concept-api/thing?tab=java#thing-methods)>
    javascript:
      <<: *method-getOwners
      method: attributeType.asRemote(tx).getOwners(onlyKey)
      returns:
        - "[`Stream`](../client-api/nodejs#stream) of [`Thing`](../concept-api/thing?tab=javascript#thing-methods)"
    python:
      <<: *method-getOwners
      method: attributeType.as_remote(tx).get_owners(onlyKey)
      returns:
        - Iterator of [`Thing`](../concept-api/thing?tab=python#thing-methods)

  - method:
    common: &method-getOwnersExplicit
      title: Retrieve direct owners of this Type of Attribute
      description: Retrieve all Things that directly own an attribute of this type. Optionally, only fetches Things that own an attribute of this type as a key.
      accepts:
        param:
          name: onlyKey
          description: If true, only retrieve things that have an attribute of this type as a key.
          type: boolean
          required: false
          default: false
    java:
      <<: *method-getOwnersExplicit
      method: attributeType.asRemote(Transaction tx).getOwnersExplicit(boolean onlyKey);
      returns:
        - Stream<[`Thing`](../concept-api/thing?tab=java#thing-methods)>
    javascript:
      <<: *method-getOwnersExplicit
      method: attributeType.asRemote(tx).getOwnersExplicit(onlyKey)
      returns:
        - "[`Stream`](../client-api/nodejs#stream) of [`Thing`](../concept-api/thing?tab=javascript#thing-methods)"
    python:
      <<: *method-getOwnersExplicit
      method: attribute_type.as_remote(tx).get_owners_explicit(only_key)
      returns:
        - Iterator of [`Thing`](../concept-api/thing?tab=python#thing-methods)

  - method:
    common: &method-asRemote
      title: Get a Remote version of the AttributeType.
      description: The remote version uses the given transaction to execute every method call.
      accepts:
        param:
          name: transaction
          description: The transaction to be used to make method calls.
          type: Transaction
          required: true
          default: N/A
      returns:
        - "`RemoteAttributeType`"
    java:
      <<: *method-asRemote
      method: attributeType.asRemote(Transaction tx);
      returns:
        - "`AttributeType.Remote`"
    javascript:
      <<: *method-asRemote
      method: attributeType.asRemote(tx);
    python:
      <<: *method-asRemote
      method: attributeType.as_remote(tx)

  - method:
    common: &method-isboolean
      title: Check if value is of type boolean
      description: Returns true if the value for attributes of this type is of type boolean. Otherwise, returns false.
      return:
        - boolean
    java:
      <<: *method-isboolean
      method: attributeType.isBoolean();
    javascript:
      <<: *method-isboolean
      method: attributeType.isBoolean();
    python:
      <<: *method-isboolean
      method: attributeType.is_boolean()

  - method:
    common: &method-islong
      title: Check if value is of type long
      description: Returns true if the value for attributes of this type is of type long. Otherwise, returns false.
      return:
        - boolean
    java:
      <<: *method-islong
      method: attributeType.isLong();
    javascript:
      <<: *method-islong
      method: attributeType.isLong();
    python:
      <<: *method-islong
      method: attributeType.is_long()

  - method:
    common: &method-isdouble
      title: Check if value is of type double
      description: Returns true if the value for attributes of this type is of type double. Otherwise, returns false.
      return:
        - boolean
    java:
      <<: *method-isdouble
      method: attributeType.isDouble();
    javascript:
      <<: *method-isdouble
      method: attributeType.isDouble();
    python:
      <<: *method-isdouble
      method: attributeType.is_double()

  - method:
    common: &method-isstring
      title: Check if value is of type string
      description: Returns true if the value for attributes of this type is of type string. Otherwise, returns false.
      return:
        - boolean
    java:
      <<: *method-isstring
      method: attributeType.isString();
    javascript:
      <<: *method-isstring
      method: attributeType.isString();
    python:
      <<: *method-isstring
      method: attributeType.is_string()

  - method:
    common: &method-isdatetime
      title: Check if value is of type datetime
      description: Returns true if the value for attributes of this type datetime. Otherwise, returns false.
      return:
        - boolean
    java:
      <<: *method-isdatetime
      method: attributeType.isDateTime();
    javascript:
      <<: *method-isdatetime
      method: attributeType.isDateTime();
    python:
      <<: *method-isdatetime
      method: attributeType.is_datetime()
