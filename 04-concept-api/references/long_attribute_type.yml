methods:
  - method:
    common: &method-put
      title: Put instance
      description: Puts and returns a new instance of this LongAttributeType with the specified value. If an attribute with this value does not yet exist, it will be created.
      returns:
        - LongAttribute
      accepts: &method-put-accepts
        param: &method-put-accepts-value
          name: value
          description: The value of the instance to be put
          required: true
          default: N/A
    java:
      <<: *method-put
      method: longAttributeType.asRemote(Transaction tx).put(long value);
      accepts:
        <<: *method-put-accepts
        param:
          <<: *method-put-accepts-value
          type: long
    javascript:
      <<: *method-put
      method: await longAttributeType.asRemote(tx).put(value);
      accepts:
        <<: *method-put-accepts
        param:
          <<: *method-put-accepts-value
          type: number
    python:
      <<: *method-put
      method: longAttributeType.as_remote(tx).put(value)
      accepts:
        <<: *method-put-accepts
        param:
          <<: *method-put-accepts-value
          type: int

  - method:
    common: &method-get
      title: Get instance
      description: Returns the instance, if it exists, of this LongAttributeType with the specified value.
      returns:
        - LongAttribute
      accepts: &method-get-accepts
        param: &method-get-accepts-value
          name: value
          description: The value of the instance to be retrieved
          required: true
          default: N/A
    java:
      <<: *method-get
      method: longAttributeType.asRemote(Transaction tx).get(long value);
      accepts:
        <<: *method-get-accepts
        param:
          <<: *method-get-accepts-value
          type: long
    javascript:
      <<: *method-get
      method: await longAttributeType.asRemote(tx).get(value);
      accepts:
        <<: *method-get-accepts
        param:
          <<: *method-get-accepts-value
          type: number
    python:
      <<: *method-get
      method: longAttributeType.as_remote(tx).get(value)
      accepts:
        <<: *method-get-accepts
        param:
          <<: *method-get-accepts-value
          type: int

  - method:
    common: &method-setsupertype
      title: Set Supertype
      description: Sets the supplied LongAttributeType as the supertype of the current LongAttributeType
      accepts: &accepts-setsupertype
        param: &accepts-setsupertype-attributetype
          name: longAttributeType
          description: The AttributeType to set as the supertype of this LongAttributeType
          type: LongAttributeType
          required: true
          default: N/A
    java:
      <<: *method-setsupertype
      method: attributeType.asRemote(Transaction tx).setSupertype(AttributeType.Long longAttributeType);
      returns:
        - void
    javascript:
      <<: *method-setsupertype
      method: attributeType.asRemote(tx).setSupertype(longAttributeType);
      returns:
        - void
    python:
      <<: *method-setsupertype
      method: attributeType.as_remote(tx).set_supertype(longAttributeType)
      accepts:
        <<: *accepts-setsupertype
        param:
          <<: *accepts-setsupertype-attributetype
          name: _type
      returns:
        - None

  - method:
    common: &method-getSubtypes
      title: Retrieve all subtypes
      description: Retrieves all direct and indirect subtypes of the LongAttributeType.
    java:
      <<: *method-getSubtypes
      method: type.asRemote(Transaction tx).getSubtypes();
      returns:
        - Stream<[`AttributeType.Long`](../concept-api/type?tab=java#longattributetype-methods)>
    javascript:
      <<: *method-getSubtypes
      method: type.asRemote(tx).getSubtypes()
      returns:
        - "[`Stream`](../client-api/nodejs#stream) of [`LongAttributeType`](../concept-api/type?tab=javascript#longattributetype-methods)"
    python:
      <<: *method-getSubtypes
      method: type.as_remote(tx).get_subtypes()
      returns:
        - Iterator of [`LongAttributeType`](../concept-api/type?tab=python#longattributetype-methods)

  - method:
    common: &method-getInstances
      title: Retrieve all instances of this LongAttributeType
      description: Retrieves all direct and indirect LongAttributes that are instances of this Type.
    java:
      <<: *method-getInstances
      method: type.asRemote(Transaction tx).getInstances();
      returns:
        - Stream<[`LongAttribute`](../concept-api/thing?tab=java#attribute-methods)>
    javascript:
      <<: *method-getInstances
      method: type.asRemote(tx).getInstances()
      returns:
        - "[`Stream`](../client-api/nodejs#stream) of [`LongAttribute`](../concept-api/thing?tab=javascript#attribute-methods)>"
    python:
      <<: *method-getInstances
      method: type.as_remote(tx).get_instances()
      returns:
        - Iterator of [`LongAttribute`](../concept-api/thing?tab=python#attribute-methods)

  - method:
    common: &method-asRemote
      title: Get a Remote version of the LongAttributeType.
      description: The remote version uses the given transaction to execute every method call.
      accepts:
        param:
          name: transaction
          description: The transaction to be used to make method calls.
          type: Transaction
          required: true
          default: N/A
      returns:
        - "`RemoteLongAttributeType`"
    java:
      <<: *method-asRemote
      method: longAttributeType.asRemote(Transaction tx);
      returns:
        - "`LongAttributeType.Remote`"
    javascript:
      <<: *method-asRemote
      method: longAttributeType.asRemote(tx);
    python:
      <<: *method-asRemote
      method: longAttributeType.as_remote(tx)
